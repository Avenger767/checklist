const slides = ['Welcome to the CSA Drive Troubleshooting Module.', 'Objectives:\n- Identify Fault Codes generated by CSA Drive\n- Use Moog Motion Control software\n- Interpret Status LEDs\n- Validate fault hypothesis\n- Recommend/remove CSA drive if needed', 'Primary References:\n- CDS46007: Assembly and Installation Manual\n- CDS46008: CAE Motion System User Manual\nSecondary:\n- CDS7324: DS2110 CSE Servo Drive Manual', 'Identifying Faults:\n- Navigate Moog GUI to find fault codes\n- Observe CSA Drive Status Indicators and LEDs in cabinet', 'Fault Indicators:\n- Status LED displays fault codes sequentially (e.g., F1, F11)\n- Faults appear in software as well', 'Use Alarm Troubleshooting Guide in CDS46008 Chapter 12:\n- Review possible causes and suggested actions', "Step 1: Check Circuit Breakers\n- Verify status via GUI\n- Reference schematics\n- Green window shows ON; white 'OFF' means tripped", 'Step 2: Inspect Power/Signal Connections\n- Shutdown system (CDS46008 §7.4.4)\n- Don’t plug/unplug encoder cables with power on\n- Check torque & signs of damage', 'Step 3: Verify EtherCAT\n- ID settings (ID1, ID2)\n- Cable integrity\n- LED behavior (RUN lit, ACT blinking)', 'Step 4: Confirm Offsets\n- Check actuator feedback when retracted\n- Reset Home if not ~0.0m\n- Check commutation offset = 0', 'Step 5: Encoder Cable Swap\n- Power down\n- Swap encoder cables (not power)\n- See if fault follows cable or stays with actuator', 'Step 6: Swap Control Heads\n- Swap head with adjacent CSA Drive\n- Power system up\n- See if fault follows head', 'Step 7: Swap Actuator Cables\n- Move all cables from suspect actuator to adjacent\n- Change Sercos ID accordingly', 'Step 8: Power Up & Engage\n- If fault remains with drive: drive is faulty\n- If fault follows actuator: actuator is faulty', 'Step 9: Final Decision\n- If CSA drive is bad: replace it (CDS46008 §10.2.2)\n- If not: contact OEM or continue troubleshooting', 'End of Module. Contact CAE Support if further help is needed.'];

let currentSlide = 0;
const contentDiv = document.getElementById('content');
const prevBtn = document.getElementById('prevBtn');
const nextBtn = document.getElementById('nextBtn');

function updateSlide() {
    contentDiv.innerHTML = `<pre>${slides[currentSlide]}</pre>`;
    prevBtn.disabled = currentSlide === 0;
    nextBtn.disabled = currentSlide === slides.length - 1;
}

prevBtn.addEventListener('click', () => {
    if (currentSlide > 0) {
        currentSlide--;
        updateSlide();
    }
});

nextBtn.addEventListener('click', () => {
    if (currentSlide < slides.length - 1) {
        currentSlide++;
        updateSlide();
    }
});

updateSlide();
